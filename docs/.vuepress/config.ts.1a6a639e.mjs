// docs/.vuepress/config.ts
import { defineUserConfig } from "vuepress";
import { searchProPlugin } from "vuepress-plugin-search-pro";
import { copyrightPlugin } from "vuepress-plugin-copyright2";
import { sakura } from "@anyfork/vuepress-plugin-sakura-next";
import { googleAnalyticsPlugin } from "@vuepress/plugin-google-analytics";
import { path as path2 } from "@vuepress/utils";

// docs/.vuepress/theme.ts
import { path } from "@vuepress/utils";
import { hopeTheme } from "vuepress-theme-hope";

// docs/.vuepress/navbar.ts
import { navbar } from "vuepress-theme-hope";
var navbar_default = navbar([
  { text: "\u9996\u9875", icon: "blog", link: "/" },
  { text: "\u653B\u7565", icon: "blog", link: "/\u68A6\u8FD8\u897F\u6E38/\u7248\u672C\u7279\u8272.html" },
  { text: "\u5DE5\u5177\u6536\u85CF", icon: "tool", link: "https://nav.newzone.top/" }
]);

// docs/.vuepress/sidebar.ts
import { sidebar } from "vuepress-theme-hope";
var sidebar_default = sidebar([
  {
    text: "\u2728 \u68A6\u8FD8\u897F\u6E38",
    icon: "",
    prefix: "/\u68A6\u8FD8\u897F\u6E38",
    link: "",
    collapsible: false,
    children: "structure"
  },
  {
    text: "\u2728 \u74DC\u76AE\u5C4B\u68A6\u5E7B15",
    icon: "",
    prefix: "/\u74DC\u76AE\u5C4B\u68A6\u5E7B15/",
    link: "",
    collapsible: false,
    children: "structure"
  },
  {
    text: "\u2728 \u65B0\u795E\u6B66",
    icon: "",
    prefix: "/\u65B0\u795E\u6B66/",
    link: "",
    collapsible: false,
    children: "structure"
  },
  {
    text: "\u2728 \u68A6\u56DE\u897F\u6E38\u624B\u6E38",
    icon: "",
    prefix: "/\u68A6\u56DE\u897F\u6E38\u624B\u6E38/",
    link: "",
    collapsible: false,
    children: "structure"
  }
]);

// docs/.vuepress/theme.ts
var __vite_injected_original_dirname = "D:/works/WEB/gpwdoc/docs/.vuepress";
var theme_default = hopeTheme({
  hostname: "https://newzone.top",
  author: {
    name: "\u74DC\u76AE\u5C4B",
    url: "https://newzone.top"
  },
  iconAssets: "iconfont",
  logo: "/logo.svg",
  breadcrumb: false,
  contributors: false,
  lastUpdated: true,
  editLink: false,
  themeColor: {
    blue: "#2196f3",
    red: "#f26d6d",
    green: "#3eaf7c",
    orange: "#fb9b5f"
  },
  fullscreen: true,
  repo: "rockbenben/LearnData",
  repoLabel: "GitHub",
  repoDisplay: true,
  docsDir: "docs",
  navbar: navbar_default,
  navbarLayout: {
    left: ["Brand"],
    center: ["Links", "Search"],
    right: ["Repo", "Outlook"]
  },
  sidebar: sidebar_default,
  pageInfo: ["Category", "Tag", "Word", "ReadingTime", "PageView"],
  blog: {
    articleInfo: ["Date", "PageView", "Category", "Tag", "ReadingTime"],
    name: "\u6E05\u987A",
    avatar: "/avatar_self.webp",
    description: "\u8FF7\u4FE1\u65B0\u5DE5\u5177\uFF0C\u70ED\u8877\u4E8E\u7814\u7A76\u5F00\u6E90\u8F6F\u4EF6\u3001\u5FC3\u7406\u5B66\u7406\u8BBA\uFF0C\u5B9A\u671F\u5206\u4EAB\u63A2\u7D22\u6210\u679C",
    intro: "/intro.html",
    roundAvatar: true,
    medias: {
      GitHub: "https://github.com/rockbenben",
      Zhihu: "https://www.zhihu.com/people/qingwhat",
      \u5C11\u6570\u6D3E: [
        "https://sspai.com/u/zqj05i4v/posts",
        path.resolve(__vite_injected_original_dirname, "icons/sspai.svg")
      ],
      Wechat: "http://tc.seoipo.com/wechat.svg",
      Email: "mailto:learndata@newzone.top",
      Discord: "https://discord.gg/PZTQfJ4GjX",
      RSS: "https://newzone.top/rss.xml"
    }
  },
  hotReload: true,
  plugins: {
    comment: {
      provider: "Waline",
      serverURL: "https://waline.jax.ee/",
      reaction: [
        "https://lf3-cdn-tos.bytecdntp.com/cdn/expire-1-y/twemoji/13.1.0/72x72/1f44d.png",
        "https://lf3-cdn-tos.bytecdntp.com/cdn/expire-1-y/twemoji/13.1.0/72x72/1f44f.png",
        "https://lf3-cdn-tos.bytecdntp.com/cdn/expire-1-y/twemoji/13.1.0/72x72/1f60e.png",
        "https://lf3-cdn-tos.bytecdntp.com/cdn/expire-1-y/twemoji/13.1.0/72x72/1f602.png",
        "https://lf3-cdn-tos.bytecdntp.com/cdn/expire-1-y/twemoji/13.1.0/72x72/1f635-200d-1f4ab.png"
      ],
      walineLocales: {
        "/": {
          reactionTitle: "\u5DF2\u5230\u8FBE\u6587\u7AE0\u5E95\u90E8\uFF0C\u6B22\u8FCE\u7559\u8A00\u3001\u8868\u60C5\u4E92\u52A8~",
          admin: "\u76DB\u5E74\u4E0D\u91CD\u6765\uFF0C\u4E00\u65E5\u96BE\u518D\u6668",
          level0: "\u953B\u4F53",
          level1: "\u70BC\u6C14",
          level2: "\u7B51\u57FA",
          level3: "\u91D1\u4E39",
          level4: "\u5143\u5A74",
          level5: "\u5316\u795E"
        }
      }
    },
    components: ["Badge", "BiliBili", "VideoPlayer", "YouTube"],
    mdEnhance: {
      align: true,
      attrs: true,
      container: true,
      gfm: true,
      imageLazyload: true,
      imageSize: true,
      imageTitle: true,
      include: true,
      mark: true,
      footnote: true,
      tasklist: true,
      sub: true,
      sup: true,
      tabs: true
    },
    feed: {
      rss: true,
      count: 10
    }
  }
});

// docs/.vuepress/config.ts
var __vite_injected_original_dirname2 = "D:/works/WEB/gpwdoc/docs/.vuepress";
var config_default = defineUserConfig({
  lang: "zh-CN",
  title: "\u74DC\u76AE\u5C4B\u6587\u6863",
  description: "\u74DC\u76AE\u5C4B\u51FA\u54C1\u7684\u5404\u79CD\u653B\u7565\u6587\u6863\u90FD\u5728\u8FD9\u91CC\u54E6",
  base: "/",
  theme: theme_default,
  shouldPrefetch: false,
  templateBuild: path2.resolve(__vite_injected_original_dirname2, "templateBuild.html"),
  pagePatterns: ["**/*.md", "!_temp", "!.vuepress", "!node_modules"],
  plugins: [
    sakura({
      sakura_img: "/blog-docs/snowflake/blue.png"
    }),
    copyrightPlugin({
      global: true,
      disableCopy: true,
      disableSelection: true
    }),
    searchProPlugin({
      indexContent: true,
      locales: {
        "/": {
          placeholder: "\u5F00\u59CB\u641C\u7D22"
        }
      },
      delay: 500
    }),
    googleAnalyticsPlugin({
      id: "G-RWKZTY2P9R"
    })
  ]
});
export {
  config_default as default
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsiZG9jcy8udnVlcHJlc3MvY29uZmlnLnRzIiwgImRvY3MvLnZ1ZXByZXNzL3RoZW1lLnRzIiwgImRvY3MvLnZ1ZXByZXNzL25hdmJhci50cyIsICJkb2NzLy52dWVwcmVzcy9zaWRlYmFyLnRzIl0sCiAgInNvdXJjZXNDb250ZW50IjogWyJjb25zdCBfX3ZpdGVfaW5qZWN0ZWRfb3JpZ2luYWxfZGlybmFtZSA9IFwiRDovd29ya3MvV0VCL2dwd2RvYy9kb2NzLy52dWVwcmVzc1wiO2NvbnN0IF9fdml0ZV9pbmplY3RlZF9vcmlnaW5hbF9maWxlbmFtZSA9IFwiRDpcXFxcd29ya3NcXFxcV0VCXFxcXGdwd2RvY1xcXFxkb2NzXFxcXC52dWVwcmVzc1xcXFxjb25maWcudHNcIjtjb25zdCBfX3ZpdGVfaW5qZWN0ZWRfb3JpZ2luYWxfaW1wb3J0X21ldGFfdXJsID0gXCJmaWxlOi8vL0Q6L3dvcmtzL1dFQi9ncHdkb2MvZG9jcy8udnVlcHJlc3MvY29uZmlnLnRzXCI7aW1wb3J0IHsgZGVmaW5lVXNlckNvbmZpZyB9IGZyb20gXCJ2dWVwcmVzc1wiO1xyXG4vLyBpbXBvcnQgeyB3ZWJwYWNrQnVuZGxlciB9IGZyb20gXCJAdnVlcHJlc3MvYnVuZGxlci13ZWJwYWNrXCI7XHJcbi8vIGltcG9ydCB7IGRlZmluZVVzZXJDb25maWcgfSBmcm9tIFwiQHZ1ZXByZXNzL2NsaVwiO1xyXG5pbXBvcnQgeyBzZWFyY2hQbHVnaW4gfSBmcm9tIFwiQHZ1ZXByZXNzL3BsdWdpbi1zZWFyY2hcIjtcclxuaW1wb3J0IHsgc2VhcmNoUHJvUGx1Z2luIH0gZnJvbSBcInZ1ZXByZXNzLXBsdWdpbi1zZWFyY2gtcHJvXCI7XHJcbmltcG9ydCB7IGNvcHlyaWdodFBsdWdpbiB9IGZyb20gXCJ2dWVwcmVzcy1wbHVnaW4tY29weXJpZ2h0MlwiO1xyXG5pbXBvcnQgeyBkb2NzZWFyY2hQbHVnaW4gfSBmcm9tIFwiQHZ1ZXByZXNzL3BsdWdpbi1kb2NzZWFyY2hcIjtcclxuaW1wb3J0IHsgc2FrdXJhIH0gZnJvbSAnQGFueWZvcmsvdnVlcHJlc3MtcGx1Z2luLXNha3VyYS1uZXh0J1xyXG5pbXBvcnQgeyBnb29nbGVBbmFseXRpY3NQbHVnaW4gfSBmcm9tIFwiQHZ1ZXByZXNzL3BsdWdpbi1nb29nbGUtYW5hbHl0aWNzXCI7XHJcbmltcG9ydCB7IHBhdGggfSBmcm9tIFwiQHZ1ZXByZXNzL3V0aWxzXCI7XHJcbmltcG9ydCB0aGVtZSBmcm9tIFwiLi90aGVtZVwiO1xyXG5leHBvcnQgZGVmYXVsdCBkZWZpbmVVc2VyQ29uZmlnKHtcclxuICAvLyBcdTdGNTFcdTdBRDlcdThCRURcdThBMDBcdUZGMENcdTlFRDhcdThCQTRcdTRFM0FcdTRFMkRcdTY1ODdcclxuICBsYW5nOiBcInpoLUNOXCIsXHJcbiAgLy8gXHU3RjUxXHU3QUQ5XHU2ODA3XHU5ODk4XHJcbiAgdGl0bGU6IFwiXHU3NERDXHU3NkFFXHU1QzRCXHU2NTg3XHU2ODYzXCIsXHJcbiAgLy8gXHU3RjUxXHU3QUQ5XHU2M0NGXHU4RkYwXHJcbiAgZGVzY3JpcHRpb246XHJcbiAgICBcIlx1NzREQ1x1NzZBRVx1NUM0Qlx1NTFGQVx1NTRDMVx1NzY4NFx1NTQwNFx1NzlDRFx1NjUzQlx1NzU2NVx1NjU4N1x1Njg2M1x1OTBGRFx1NTcyOFx1OEZEOVx1OTFDQ1x1NTRFNlwiLFxyXG5cclxuICAvLyBcdTdGNTFcdTdBRDlcdThERUZcdTVGODRcdTlFRDhcdThCQTRcdTRFM0FcdTRFM0JcdTU3REZcdTU0MERcdTMwMDJcdTU5ODJcdTY3OUNcdTdGNTFcdTdBRDlcdTkwRThcdTdGNzJcdTU3MjhcdTVCNTBcdThERUZcdTVGODRcdTRFMEJcdUZGMENcdTZCRDRcdTU5ODIgeHh4LmNvbS95eXlcdUZGMENcdTkwQTNcdTRFNDggYmFzZSBcdTVFOTRcdThCRTVcdTg4QUJcdThCQkVcdTdGNkVcdTRFM0EgXCIveXl5L1wiXHJcbiAgYmFzZTogXCIvXCIsXHJcblxyXG4gIHRoZW1lLFxyXG4gIC8vIFx1NjYyRlx1NTQyNlx1NUYwMFx1NTQyRlx1OTg3NVx1OTc2Mlx1OTg4NFx1NjJDOVx1NTNENlx1RkYwQ1x1NTk4Mlx1Njc5Q1x1NjcwRFx1NTJBMVx1NTY2OFx1NUJCRFx1NUUyNlx1OERCM1x1NTkxRlx1RkYwQ1x1NTNFRlx1NjUzOVx1NEUzQSB0cnVlXHVGRjBDXHU0RjFBXHU2M0QwXHU1MzQ3XHU1MTc2XHU0RUQ2XHU5ODc1XHU5NzYyXHU1MkEwXHU4RjdEXHU5MDFGXHU1RUE2XHJcbiAgc2hvdWxkUHJlZmV0Y2g6IGZhbHNlLFxyXG5cclxuICAvLyBcdTRGRUVcdTY1MzlcdTk4NzVcdTk3NjJcdTZBMjFcdTY3N0ZcdUZGMENAdnVlcHJlc3MtdGhlbWUtaG9wZS90ZW1wbGF0ZXMvaW5kZXguYnVpbGQuaHRtbFxyXG4gIC8vIFx1OTE0RFx1N0Y2RVx1NTNDMlx1ODAwM1x1RkYxQWh0dHBzOi8vdnVlcHJlc3MuZ2l0aHViLmlvL3poL3JlZmVyZW5jZS90aGVtZS1hcGkuaHRtbCN0ZW1wbGF0ZWJ1aWxkXHJcbiAgdGVtcGxhdGVCdWlsZDogcGF0aC5yZXNvbHZlKF9fZGlybmFtZSwgXCJ0ZW1wbGF0ZUJ1aWxkLmh0bWxcIiksXHJcblxyXG4gIC8vIFx1Nzk4MVx1NkI2Mlx1NjU4N1x1NEVGNlx1NTkzOVx1NzUxRlx1NjIxMFx1OTc1OVx1NjAwMVx1NjU4N1x1NEVGNlx1RkYwQ1x1NTNDMlx1ODAwMyBbVnVlUHJlc3MgXHU2NTg3XHU2ODYzXVx1RkYwOGh0dHBzOi8vdjIudnVlcHJlc3MudnVlanMub3JnL3poL2d1aWRlL3BhZ2UuaHRtbCNyb3V0aW5nXHVGRjA5XHJcbiAgcGFnZVBhdHRlcm5zOiBbXCIqKi8qLm1kXCIsIFwiIV90ZW1wXCIsIFwiIS52dWVwcmVzc1wiLCBcIiFub2RlX21vZHVsZXNcIl0sXHJcblxyXG4gIHBsdWdpbnM6IFtcclxuICAgIC8vXHU2QTMxXHU4MkIxXHU3Mjc5XHU2NTQ4XHJcbiAgICBzYWt1cmEoe1xyXG4gICAgICBzYWt1cmFfaW1nOicvYmxvZy1kb2NzL3Nub3dmbGFrZS9ibHVlLnBuZydcclxuICAgIH0pLFxyXG4gICAgLy8gXHU3OTgxXHU2QjYyXHU1OTBEXHU1MjM2XHU5MDA5XHU2MkU5XHJcbiAgICAvLyBkb2NzZWFyY2hQbHVnaW4oe1xyXG4gICAgLy8gICBpbmRleE5hbWU6IFwibmV3em9uZVwiLFxyXG4gICAgLy8gICBhcHBJZDogXCJNNEVYWEVaSUVHXCIsXHJcbiAgICAvLyAgIGFwaUtleTogXCJmZDg4OTFhOWM0Y2MyMWUwZWY0ZjExYmY0NGY3YTExZVwiLFxyXG4gICAgLy8gfSksXHJcbiAgICAvLyBcdTc5ODFcdTc1MjhcdTU5MERcdTUyMzZcclxuICAgIGNvcHlyaWdodFBsdWdpbih7XHJcbiAgICAgIC8vIFx1NjNEMlx1NEVGNlx1OTAwOVx1OTg3OVxyXG4gICAgICBnbG9iYWw6IHRydWUsXHJcbiAgICAgIGRpc2FibGVDb3B5OiB0cnVlLFxyXG4gICAgICBkaXNhYmxlU2VsZWN0aW9uOiB0cnVlLFxyXG4gICAgfSksXHJcbiAgICAvLyBcdTY3MkNcdTU3MzBcdTY0MUNcdTdEMjJcdUZGMUFcdTlFRDhcdThCQTRcdTYwQzVcdTUxQjVcdTRFMEJcdUZGMENcdThCRTVcdTYzRDJcdTRFRjZcdTRGMUFcdTVDMDZcdTk4NzVcdTk3NjJcdTY4MDdcdTk4OThcdTU0OENcdTVDMEZcdTY4MDdcdTk4OThcdTRGNUNcdTRFM0FcdTY0MUNcdTdEMjJcdTdEMjJcdTVGMTVcdTMwMDJcclxuICAgIHNlYXJjaFByb1BsdWdpbih7XHJcbiAgICAgIC8vIFx1OTE0RFx1N0Y2RVx1OTAwOVx1OTg3OVxyXG4gICAgICBpbmRleENvbnRlbnQ6IHRydWUsXHJcbiAgICAgIC8vaG90S2V5czogW3trZXk6ICdrJywgY3RybDogdHJ1ZX1dLFxyXG4gICAgICBsb2NhbGVzOiB7XHJcbiAgICAgICAgXCIvXCI6IHtcclxuICAgICAgICAgIC8vIFx1ODk4Nlx1NzZENiBwbGFjZWhvbGRlclxyXG4gICAgICAgICAgcGxhY2Vob2xkZXI6IFwiXHU1RjAwXHU1OUNCXHU2NDFDXHU3RDIyXCIsXHJcbiAgICAgICAgfSxcclxuICAgICAgfSxcclxuICAgICAgZGVsYXk6IDUwMCxcclxuICAgIH0pLFxyXG4gICAgZ29vZ2xlQW5hbHl0aWNzUGx1Z2luKHtcclxuICAgICAgaWQ6IFwiRy1SV0taVFkyUDlSXCIsXHJcbiAgICB9KSxcclxuICAgIFxyXG4gIF0sXHJcbn0pO1xyXG4iLCAiY29uc3QgX192aXRlX2luamVjdGVkX29yaWdpbmFsX2Rpcm5hbWUgPSBcIkQ6L3dvcmtzL1dFQi9ncHdkb2MvZG9jcy8udnVlcHJlc3NcIjtjb25zdCBfX3ZpdGVfaW5qZWN0ZWRfb3JpZ2luYWxfZmlsZW5hbWUgPSBcIkQ6XFxcXHdvcmtzXFxcXFdFQlxcXFxncHdkb2NcXFxcZG9jc1xcXFwudnVlcHJlc3NcXFxcdGhlbWUudHNcIjtjb25zdCBfX3ZpdGVfaW5qZWN0ZWRfb3JpZ2luYWxfaW1wb3J0X21ldGFfdXJsID0gXCJmaWxlOi8vL0Q6L3dvcmtzL1dFQi9ncHdkb2MvZG9jcy8udnVlcHJlc3MvdGhlbWUudHNcIjtpbXBvcnQgeyBwYXRoIH0gZnJvbSBcIkB2dWVwcmVzcy91dGlsc1wiO1xyXG5pbXBvcnQgeyBob3BlVGhlbWUgfSBmcm9tIFwidnVlcHJlc3MtdGhlbWUtaG9wZVwiO1xyXG5pbXBvcnQgbmF2YmFyIGZyb20gXCIuL25hdmJhclwiO1xyXG5pbXBvcnQgc2lkZWJhciBmcm9tIFwiLi9zaWRlYmFyXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBob3BlVGhlbWUoe1xyXG4gIC8vIFx1NEUzQlx1OTg5OFx1OTAwOVx1OTg3OVx1RkYxQWh0dHBzOi8vdnVlcHJlc3MtdGhlbWUtaG9wZS5naXRodWIuaW8vdjIvemgvY29uZmlnL3RoZW1lL2xheW91dC5odG1sXHJcbiAgaG9zdG5hbWU6IFwiaHR0cHM6Ly9uZXd6b25lLnRvcFwiLFxyXG5cclxuICBhdXRob3I6IHtcclxuICAgIG5hbWU6IFwiXHU3NERDXHU3NkFFXHU1QzRCXCIsXHJcbiAgICB1cmw6IFwiaHR0cHM6Ly9uZXd6b25lLnRvcFwiLFxyXG4gIH0sXHJcblxyXG4gIGljb25Bc3NldHM6IFwiaWNvbmZvbnRcIixcclxuICBsb2dvOiBcIi9sb2dvLnN2Z1wiLFxyXG5cclxuICAvLyBcdTY2MkZcdTU0MjZcdTUxNjhcdTVDNDBcdTU0MkZcdTc1MjhcdThERUZcdTVGODRcdTVCRkNcdTgyMkFcclxuICBicmVhZGNydW1iOiBmYWxzZSxcclxuXHJcbiAgLy8gXHU5ODc1XHU5NzYyXHU1MTQzXHU2NTcwXHU2MzZFXHVGRjFBXHU4RDIxXHU3MzJFXHU4MDA1XHVGRjBDXHU2NzAwXHU1NDBFXHU0RkVFXHU2NTM5XHU2NUY2XHU5NUY0XHVGRjBDXHU3RjE2XHU4RjkxXHU5NEZFXHU2M0E1XHJcbiAgY29udHJpYnV0b3JzOiBmYWxzZSxcclxuICBsYXN0VXBkYXRlZDogdHJ1ZSxcclxuICBlZGl0TGluazogZmFsc2UsXHJcblxyXG4gIC8vIFx1NkRGMVx1ODI3Mlx1NkEyMVx1NUYwRlx1OTE0RFx1N0Y2RVxyXG4gIC8vIGRhcmttb2RlOiBcImRpc2FibGVcIixcclxuICB0aGVtZUNvbG9yOiB7XHJcbiAgICBibHVlOiBcIiMyMTk2ZjNcIixcclxuICAgIHJlZDogXCIjZjI2ZDZkXCIsXHJcbiAgICBncmVlbjogXCIjM2VhZjdjXCIsXHJcbiAgICBvcmFuZ2U6IFwiI2ZiOWI1ZlwiLFxyXG4gIH0sXHJcbiAgZnVsbHNjcmVlbjogdHJ1ZSxcclxuXHJcbiAgLy8gXHU5RUQ4XHU4QkE0XHU0RTNBIEdpdEh1Yi4gXHU1NDBDXHU2NUY2XHU0RTVGXHU1M0VGXHU0RUU1XHU2NjJGXHU0RTAwXHU0RTJBXHU1QjhDXHU2NTc0XHU3Njg0IFVSTFxyXG4gIHJlcG86IFwicm9ja2JlbmJlbi9MZWFybkRhdGFcIixcclxuICAvLyBcdTgxRUFcdTVCOUFcdTRFNDlcdTRFRDNcdTVFOTNcdTk0RkVcdTYzQTVcdTY1ODdcdTVCNTdcdTMwMDJcdTlFRDhcdThCQTRcdTRFQ0UgYHJlcG9gIFx1NEUyRFx1ODFFQVx1NTJBOFx1NjNBOFx1NjVBRFx1NEUzQSBcIkdpdEh1YlwiIC8gXCJHaXRMYWJcIiAvIFwiR2l0ZWVcIiAvIFwiQml0YnVja2V0XCIgXHU1MTc2XHU0RTJEXHU0RTRCXHU0RTAwXHVGRjBDXHU2MjE2XHU2NjJGIFwiU291cmNlXCJcdTMwMDJcclxuICByZXBvTGFiZWw6IFwiR2l0SHViXCIsXHJcbiAgLy8gXHU2NjJGXHU1NDI2XHU1NzI4XHU1QkZDXHU4MjJBXHU2ODBGXHU1MTg1XHU2NjNFXHU3OTNBXHU0RUQzXHU1RTkzXHU5NEZFXHU2M0E1XHVGRjBDXHU5RUQ4XHU4QkE0XHU0RTNBIGB0cnVlYFxyXG4gIHJlcG9EaXNwbGF5OiB0cnVlLFxyXG4gIC8vIFx1NjU4N1x1Njg2M1x1NUI1OFx1NjUzRVx1OERFRlx1NUY4NFxyXG4gIGRvY3NEaXI6IFwiZG9jc1wiLFxyXG5cclxuICAvLyBuYXZiYXJcclxuICBuYXZiYXI6IG5hdmJhcixcclxuICAvLyBcdTVCRkNcdTgyMkFcdTY4MEZcdTVFMDNcdTVDNDBcclxuICBuYXZiYXJMYXlvdXQ6IHtcclxuICAgIGxlZnQ6IFtcIkJyYW5kXCJdLFxyXG4gICAgY2VudGVyOiBbXCJMaW5rc1wiLCBcIlNlYXJjaFwiXSxcclxuICAgIHJpZ2h0OiBbXCJSZXBvXCIsIFwiT3V0bG9va1wiXSxcclxuICB9LFxyXG4gIC8vIFx1NjYyRlx1NTQyNlx1NTcyOFx1NTQxMVx1NEUwQlx1NkVEQVx1NTJBOFx1NjVGNlx1ODFFQVx1NTJBOFx1OTY5MFx1ODVDRlx1NUJGQ1x1ODIyQVx1NjgwRlxyXG4gIC8vIG5hdmJhckF1dG9IaWRlOiBcImFsd2F5c1wiLFxyXG5cclxuICAvLyBzaWRlYmFyXHJcbiAgc2lkZWJhcjogc2lkZWJhcixcclxuICAvLyBcdTRGQTdcdThGQjlcdTY4MEZcdTYzOTJcdTVFOEZcdTg5QzRcdTUyMTlcclxuICAvLyBzaWRlYmFyU29ydGVyOiBbJ3JlYWRtZScsICdvcmRlcicsICd0aXRsZSddLFxyXG5cclxuICAvLyBmb290ZXI6IFwiXHU5RUQ4XHU4QkE0XHU5ODc1XHU4MTFBXCIsXHJcbiAgLy8gZGlzcGxheUZvb3RlcjogdHJ1ZSxcclxuXHJcbiAgLy8gXHU5ODc1XHU5NzYyXHU1RTAzXHU1QzQwIEZyb250bWF0dGVyIFx1OTE0RFx1N0Y2RVx1RkYxQWh0dHBzOi8vdnVlcHJlc3MtdGhlbWUtaG9wZS5naXRodWIuaW8vdjIvemgvY29uZmlnL2Zyb250bWF0dGVyL2xheW91dC5odG1sI3BhZ2VpbmZvXHJcbiAgcGFnZUluZm86IFtcIkNhdGVnb3J5XCIsIFwiVGFnXCIsIFwiV29yZFwiLCBcIlJlYWRpbmdUaW1lXCIsIFwiUGFnZVZpZXdcIl0sXHJcblxyXG4gIC8vIFx1NEUzQlx1OTg5OFx1NTI5Rlx1ODBGRFx1OTAwOVx1OTg3OVx1RkYxQWh0dHBzOi8vdnVlcHJlc3MtdGhlbWUtaG9wZS5naXRodWIuaW8vdjIvemgvY29uZmlnL3RoZW1lL2ZlYXR1cmUuaHRtbFxyXG4gIGJsb2c6IHtcclxuICAgIGFydGljbGVJbmZvOiBbXCJEYXRlXCIsIFwiUGFnZVZpZXdcIiwgXCJDYXRlZ29yeVwiLCBcIlRhZ1wiLCBcIlJlYWRpbmdUaW1lXCJdLFxyXG4gICAgbmFtZTogXCJcdTZFMDVcdTk4N0FcIixcclxuICAgIGF2YXRhcjogXCIvYXZhdGFyX3NlbGYud2VicFwiLFxyXG4gICAgZGVzY3JpcHRpb246IFwiXHU4RkY3XHU0RkUxXHU2NUIwXHU1REU1XHU1MTc3XHVGRjBDXHU3MEVEXHU4ODc3XHU0RThFXHU3ODE0XHU3QTc2XHU1RjAwXHU2RTkwXHU4RjZGXHU0RUY2XHUzMDAxXHU1RkMzXHU3NDA2XHU1QjY2XHU3NDA2XHU4QkJBXHVGRjBDXHU1QjlBXHU2NzFGXHU1MjA2XHU0RUFCXHU2M0EyXHU3RDIyXHU2MjEwXHU2NzlDXCIsXHJcbiAgICBpbnRybzogXCIvaW50cm8uaHRtbFwiLFxyXG4gICAgcm91bmRBdmF0YXI6IHRydWUsXHJcbiAgICBtZWRpYXM6IHtcclxuICAgICAgR2l0SHViOiBcImh0dHBzOi8vZ2l0aHViLmNvbS9yb2NrYmVuYmVuXCIsXHJcbiAgICAgIFpoaWh1OiBcImh0dHBzOi8vd3d3LnpoaWh1LmNvbS9wZW9wbGUvcWluZ3doYXRcIixcclxuICAgICAgXHU1QzExXHU2NTcwXHU2RDNFOiBbXHJcbiAgICAgICAgXCJodHRwczovL3NzcGFpLmNvbS91L3pxajA1aTR2L3Bvc3RzXCIsXHJcbiAgICAgICAgcGF0aC5yZXNvbHZlKF9fZGlybmFtZSwgXCJpY29ucy9zc3BhaS5zdmdcIiksXHJcbiAgICAgIF0sXHJcbiAgICAgIFdlY2hhdDogXCJodHRwOi8vdGMuc2VvaXBvLmNvbS93ZWNoYXQuc3ZnXCIsXHJcbiAgICAgIEVtYWlsOiBcIm1haWx0bzpsZWFybmRhdGFAbmV3em9uZS50b3BcIixcclxuICAgICAgRGlzY29yZDogXCJodHRwczovL2Rpc2NvcmQuZ2cvUFpUUWZKNEdqWFwiLFxyXG4gICAgICBSU1M6IFwiaHR0cHM6Ly9uZXd6b25lLnRvcC9yc3MueG1sXCIsXHJcbiAgICB9LFxyXG4gIH0sXHJcbiAgLy8gXHU1RjAwXHU1M0QxXHU2QTIxXHU1RjBGXHU0RTBCXHU2NjJGXHU1NDI2XHU1NDJGXHU1MkE4XHU3MEVEXHU2NkY0XHU2NUIwXHVGRjBDXHU2NjNFXHU3OTNBXHU2MjQwXHU2NzA5XHU2NkY0XHU2NTM5XHU1RTc2XHU5MUNEXHU2NUIwXHU2RTMyXHU2N0QzXHJcbiAgaG90UmVsb2FkOiB0cnVlLFxyXG4gIHBsdWdpbnM6IHtcclxuICAgIC8vIGJsb2c6IHtcclxuICAgIC8vICAgLy8gXHU4MUVBXHU1MkE4XHU2NDU4XHU4OTgxXHJcbiAgICAvLyAgIGF1dG9FeGNlcnB0OiB0cnVlLFxyXG4gICAgLy8gfSxcclxuXHJcbiAgICAvLyBcdThCQzRcdThCQkFcdTkxNERcdTdGNkVcdUZGMDhcdTRFQzVcdTUwNUFcdTY4MzdcdTRGOEJcdUZGMENcdThCQjBcdTVGOTdcdTY2RjRcdTYzNjJcdUZGMDlcclxuICAgIGNvbW1lbnQ6IHtcclxuICAgICAgcHJvdmlkZXI6IFwiV2FsaW5lXCIsXHJcbiAgICAgIHNlcnZlclVSTDogXCJodHRwczovL3dhbGluZS5qYXguZWUvXCIsXHJcbiAgICAgIHJlYWN0aW9uOiBbXHJcbiAgICAgICAgJ2h0dHBzOi8vbGYzLWNkbi10b3MuYnl0ZWNkbnRwLmNvbS9jZG4vZXhwaXJlLTEteS90d2Vtb2ppLzEzLjEuMC83Mng3Mi8xZjQ0ZC5wbmcnLFxyXG4gICAgICAgICdodHRwczovL2xmMy1jZG4tdG9zLmJ5dGVjZG50cC5jb20vY2RuL2V4cGlyZS0xLXkvdHdlbW9qaS8xMy4xLjAvNzJ4NzIvMWY0NGYucG5nJyxcclxuICAgICAgICAnaHR0cHM6Ly9sZjMtY2RuLXRvcy5ieXRlY2RudHAuY29tL2Nkbi9leHBpcmUtMS15L3R3ZW1vamkvMTMuMS4wLzcyeDcyLzFmNjBlLnBuZycsXHJcbiAgICAgICAgJ2h0dHBzOi8vbGYzLWNkbi10b3MuYnl0ZWNkbnRwLmNvbS9jZG4vZXhwaXJlLTEteS90d2Vtb2ppLzEzLjEuMC83Mng3Mi8xZjYwMi5wbmcnLFxyXG4gICAgICAgICdodHRwczovL2xmMy1jZG4tdG9zLmJ5dGVjZG50cC5jb20vY2RuL2V4cGlyZS0xLXkvdHdlbW9qaS8xMy4xLjAvNzJ4NzIvMWY2MzUtMjAwZC0xZjRhYi5wbmcnLFxyXG4gICAgICBdLFxyXG4gICAgICAvLyBcdTkwRThcdTdGNzIgV2FsaW5lXHVGRjFBaHR0cHM6Ly93YWxpbmUuanMub3JnL2d1aWRlL2dldC1zdGFydGVkLmh0bWxcclxuICAgICAgLy8gcGFnZXZpZXc6IHRydWUsIC8vIFx1NkQ0Rlx1ODlDOFx1OTFDRlx1N0VERlx1OEJBMVxyXG4gICAgICB3YWxpbmVMb2NhbGVzOiB7XHJcbiAgICAgICAgXCIvXCI6IHtcclxuICAgICAgICAgIC8vIFx1ODg2OFx1NjBDNVx1NEU5Mlx1NTJBOFx1NjNEMFx1NzkzQVx1NjU4N1x1NUI1N1xyXG4gICAgICAgICAgcmVhY3Rpb25UaXRsZTogXCJcdTVERjJcdTUyMzBcdThGQkVcdTY1ODdcdTdBRTBcdTVFOTVcdTkwRThcdUZGMENcdTZCMjJcdThGQ0VcdTc1NTlcdThBMDBcdTMwMDFcdTg4NjhcdTYwQzVcdTRFOTJcdTUyQTh+XCIsIFxyXG4gICAgICAgICAgLy8gV2FsaW5lIFx1N0I0OVx1N0VBN1x1NjgwN1x1N0I3RVxyXG4gICAgICAgICAgYWRtaW46IFwiXHU3NkRCXHU1RTc0XHU0RTBEXHU5MUNEXHU2NzY1XHVGRjBDXHU0RTAwXHU2NUU1XHU5NkJFXHU1MThEXHU2NjY4XCIsXHJcbiAgICAgICAgICBsZXZlbDA6IFwiXHU5NTNCXHU0RjUzXCIsXHJcbiAgICAgICAgICBsZXZlbDE6IFwiXHU3MEJDXHU2QzE0XCIsXHJcbiAgICAgICAgICBsZXZlbDI6IFwiXHU3QjUxXHU1N0ZBXCIsXHJcbiAgICAgICAgICBsZXZlbDM6IFwiXHU5MUQxXHU0RTM5XCIsXHJcbiAgICAgICAgICBsZXZlbDQ6IFwiXHU1MTQzXHU1QTc0XCIsXHJcbiAgICAgICAgICBsZXZlbDU6IFwiXHU1MzE2XHU3OTVFXCIsXHJcbiAgICAgICAgfSxcclxuICAgICAgfSxcclxuXHJcbiAgICAgIC8vIEdpc2N1cyBcdTU5MDdcdTc1MjhcdTkxNERcdTdGNkVcclxuICAgICAgLypcclxuICAgICAgcHJvdmlkZXI6IFwiR2lzY3VzXCIsXHJcbiAgICAgIHJlcG86IFwicm9ja2JlbmJlbi9MZWFybkRhdGFcIixcclxuICAgICAgcmVwb0lkOiBcIlJfa2dET0hkZms2UVwiLFxyXG4gICAgICBjYXRlZ29yeTogXCJDb21tZW50c1wiLFxyXG4gICAgICBjYXRlZ29yeUlkOiBcIkRJQ19rd0RPSGRmazZjNENRWU5uXCIsXHJcbiAgICAgICovXHJcbiAgICB9LFxyXG5cclxuICAgIC8vIFx1N0VDNFx1NEVGNlx1NUU5M1xyXG4gICAgY29tcG9uZW50czogW1wiQmFkZ2VcIiwgXCJCaWxpQmlsaVwiLCBcIlZpZGVvUGxheWVyXCIsIFwiWW91VHViZVwiXSxcclxuXHJcbiAgICAvLyBcdTc5ODFcdTc1MjhcdTRFMERcdTk3MDBcdTg5ODFcdTc2ODRcdTkxNERcdTdGNkVcclxuICAgIG1kRW5oYW5jZToge1xyXG4gICAgICBhbGlnbjogdHJ1ZSxcclxuICAgICAgYXR0cnM6IHRydWUsIC8vIFx1NEY3Rlx1NzUyOFx1NzI3OVx1NkI4QVx1NjgwN1x1OEJCMFx1NEUzQSBNYXJrZG93biBcdTUxNDNcdTdEMjBcdTZERkJcdTUyQTBcdTVDNUVcdTYwMjdcclxuICAgICAgLy8gY2hhcnQ6IHRydWUsXHJcbiAgICAgIC8vIGNvZGV0YWJzOiB0cnVlLCAvLyBcdTRFRTNcdTc4MDFcdTU3NTdcdTUyMDZcdTdFQzRcclxuICAgICAgY29udGFpbmVyOiB0cnVlLFxyXG4gICAgICAvLyBkZW1vOiB0cnVlLCAvL1x1NEVFM1x1NzgwMVx1NkYxNFx1NzkzQVxyXG4gICAgICAvLyBlY2hhcnRzOiB0cnVlLFxyXG4gICAgICAvLyBmbG93Y2hhcnQ6IHRydWUsXHJcbiAgICAgIGdmbTogdHJ1ZSxcclxuICAgICAgaW1hZ2VMYXp5bG9hZDogdHJ1ZSxcclxuICAgICAgLy8gaW1hZ2VNYXJrOiB0cnVlLFxyXG4gICAgICBpbWFnZVNpemU6IHRydWUsXHJcbiAgICAgIGltYWdlVGl0bGU6IHRydWUsXHJcbiAgICAgIGluY2x1ZGU6IHRydWUsIC8vXHU1QkZDXHU1MTY1XHU2NTg3XHU0RUY2XHJcbiAgICAgIC8vIGthdGV4OiB0cnVlLFxyXG4gICAgICBtYXJrOiB0cnVlLFxyXG4gICAgICAvLyBtZXJtYWlkOiB0cnVlLFxyXG4gICAgICBmb290bm90ZTogdHJ1ZSxcclxuICAgICAgdGFza2xpc3Q6IHRydWUsXHJcbiAgICAgIHN1YjogdHJ1ZSwgLy8gXHU0RTBBXHU0RTBCXHU4OUQyXHU2ODA3XHJcbiAgICAgIHN1cDogdHJ1ZSxcclxuICAgICAgdGFiczogdHJ1ZSwgLy8gXHU5MDA5XHU5ODc5XHU1MzYxXHJcbiAgICAgIC8vIHZwcmU6IHRydWUsXHJcbiAgICAgIC8vIHZ1ZVBsYXlncm91bmQ6IHRydWUsIC8vIFZ1ZSBcdTRFQTRcdTRFOTJcdTZGMTRcdTc5M0FcclxuICAgIH0sXHJcblxyXG4gICAgLy8gcnNzIFx1NUM1RVx1NjAyN1xyXG4gICAgZmVlZDoge1xyXG4gICAgICByc3M6IHRydWUsXHJcbiAgICAgIGNvdW50OiAxMCxcclxuICAgIH0sXHJcbiAgfSxcclxufSk7XHJcbiIsICJjb25zdCBfX3ZpdGVfaW5qZWN0ZWRfb3JpZ2luYWxfZGlybmFtZSA9IFwiRDovd29ya3MvV0VCL2dwd2RvYy9kb2NzLy52dWVwcmVzc1wiO2NvbnN0IF9fdml0ZV9pbmplY3RlZF9vcmlnaW5hbF9maWxlbmFtZSA9IFwiRDpcXFxcd29ya3NcXFxcV0VCXFxcXGdwd2RvY1xcXFxkb2NzXFxcXC52dWVwcmVzc1xcXFxuYXZiYXIudHNcIjtjb25zdCBfX3ZpdGVfaW5qZWN0ZWRfb3JpZ2luYWxfaW1wb3J0X21ldGFfdXJsID0gXCJmaWxlOi8vL0Q6L3dvcmtzL1dFQi9ncHdkb2MvZG9jcy8udnVlcHJlc3MvbmF2YmFyLnRzXCI7aW1wb3J0IHsgbmF2YmFyIH0gZnJvbSBcInZ1ZXByZXNzLXRoZW1lLWhvcGVcIjtcclxuXHJcbi8vIFx1N0NCRVx1OTAwOVx1NTZGRVx1NjgwN1x1RkYxQWh0dHBzOi8vdnVlcHJlc3MtdGhlbWUtaG9wZS5naXRodWIuaW8vdjIvemgvZ3VpZGUvaW50ZXJmYWNlL2ljb24uaHRtbCNpY29uZm9udC0lRTclQjIlQkUlRTklODAlODklRTUlOUIlQkUlRTYlQTAlODdcclxuZXhwb3J0IGRlZmF1bHQgbmF2YmFyKFtcclxuICB7IHRleHQ6IFwiXHU5OTk2XHU5ODc1XCIsIGljb246IFwiYmxvZ1wiLCBsaW5rOiBcIi9cIiB9LFxyXG4gIHsgdGV4dDogXCJcdTY1M0JcdTc1NjVcIiwgaWNvbjogXCJibG9nXCIsIGxpbms6IFwiL1x1NjhBNlx1OEZEOFx1ODk3Rlx1NkUzOC9cdTcyNDhcdTY3MkNcdTcyNzlcdTgyNzIuaHRtbFwiIH0sXHJcbiAgeyB0ZXh0OiBcIlx1NURFNVx1NTE3N1x1NjUzNlx1ODVDRlwiLCBpY29uOiBcInRvb2xcIiwgbGluazogXCJodHRwczovL25hdi5uZXd6b25lLnRvcC9cIiB9LFxyXG5dKTtcclxuIiwgImNvbnN0IF9fdml0ZV9pbmplY3RlZF9vcmlnaW5hbF9kaXJuYW1lID0gXCJEOi93b3Jrcy9XRUIvZ3B3ZG9jL2RvY3MvLnZ1ZXByZXNzXCI7Y29uc3QgX192aXRlX2luamVjdGVkX29yaWdpbmFsX2ZpbGVuYW1lID0gXCJEOlxcXFx3b3Jrc1xcXFxXRUJcXFxcZ3B3ZG9jXFxcXGRvY3NcXFxcLnZ1ZXByZXNzXFxcXHNpZGViYXIudHNcIjtjb25zdCBfX3ZpdGVfaW5qZWN0ZWRfb3JpZ2luYWxfaW1wb3J0X21ldGFfdXJsID0gXCJmaWxlOi8vL0Q6L3dvcmtzL1dFQi9ncHdkb2MvZG9jcy8udnVlcHJlc3Mvc2lkZWJhci50c1wiO2ltcG9ydCB7IHNpZGViYXIgfSBmcm9tIFwidnVlcHJlc3MtdGhlbWUtaG9wZVwiO1xyXG5cclxuLy8gXHU3Q0JFXHU5MDA5XHU1NkZFXHU2ODA3XHVGRjFBaHR0cHM6Ly92dWVwcmVzcy10aGVtZS1ob3BlLmdpdGh1Yi5pby92Mi96aC9ndWlkZS9pbnRlcmZhY2UvaWNvbi5odG1sI2ljb25mb250LSVFNyVCMiVCRSVFOSU4MCU4OSVFNSU5QiVCRSVFNiVBMCU4N1xyXG5leHBvcnQgZGVmYXVsdCBzaWRlYmFyKFtcclxuICB7XHJcbiAgICB0ZXh0OiBcIlx1MjcyOCBcdTY4QTZcdThGRDhcdTg5N0ZcdTZFMzhcIixcclxuICAgIGljb246IFwiXCIsXHJcbiAgICBwcmVmaXg6IFwiL1x1NjhBNlx1OEZEOFx1ODk3Rlx1NkUzOFwiLFxyXG4gICAgbGluazogXCJcIixcclxuICAgIGNvbGxhcHNpYmxlOiBmYWxzZSxcclxuICAgIGNoaWxkcmVuOiBcInN0cnVjdHVyZVwiLFxyXG4gIH0sXHJcbiAge1xyXG4gICAgdGV4dDogXCJcdTI3MjggXHU3NERDXHU3NkFFXHU1QzRCXHU2OEE2XHU1RTdCMTVcIixcclxuICAgIGljb246IFwiXCIsXHJcbiAgICBwcmVmaXg6IFwiL1x1NzREQ1x1NzZBRVx1NUM0Qlx1NjhBNlx1NUU3QjE1L1wiLFxyXG4gICAgbGluazogXCJcIixcclxuICAgIGNvbGxhcHNpYmxlOiBmYWxzZSxcclxuICAgIGNoaWxkcmVuOiBcInN0cnVjdHVyZVwiLFxyXG4gIH0sXHJcbiAge1xyXG4gICAgdGV4dDogXCJcdTI3MjggXHU2NUIwXHU3OTVFXHU2QjY2XCIsXHJcbiAgICBpY29uOiBcIlwiLFxyXG4gICAgcHJlZml4OiBcIi9cdTY1QjBcdTc5NUVcdTZCNjYvXCIsXHJcbiAgICBsaW5rOiBcIlwiLFxyXG4gICAgY29sbGFwc2libGU6IGZhbHNlLFxyXG4gICAgY2hpbGRyZW46IFwic3RydWN0dXJlXCIsXHJcbiAgfSxcclxuICB7XHJcbiAgICB0ZXh0OiBcIlx1MjcyOCBcdTY4QTZcdTU2REVcdTg5N0ZcdTZFMzhcdTYyNEJcdTZFMzhcIixcclxuICAgIGljb246IFwiXCIsXHJcbiAgICBwcmVmaXg6IFwiL1x1NjhBNlx1NTZERVx1ODk3Rlx1NkUzOFx1NjI0Qlx1NkUzOC9cIixcclxuICAgIGxpbms6IFwiXCIsXHJcbiAgICBjb2xsYXBzaWJsZTogZmFsc2UsXHJcbiAgICBjaGlsZHJlbjogXCJzdHJ1Y3R1cmVcIixcclxuICB9LFxyXG5dKTtcclxuIl0sCiAgIm1hcHBpbmdzIjogIjtBQUFxUixTQUFTLHdCQUF3QjtBQUl0VCxTQUFTLHVCQUF1QjtBQUNoQyxTQUFTLHVCQUF1QjtBQUVoQyxTQUFTLGNBQWM7QUFDdkIsU0FBUyw2QkFBNkI7QUFDdEMsU0FBUyxRQUFBQSxhQUFZOzs7QUNUOFAsU0FBUyxZQUFZO0FBQ3hTLFNBQVMsaUJBQWlCOzs7QUNEMlAsU0FBUyxjQUFjO0FBRzVTLElBQU8saUJBQVEsT0FBTztBQUFBLEVBQ3BCLEVBQUUsTUFBTSxnQkFBTSxNQUFNLFFBQVEsTUFBTSxJQUFJO0FBQUEsRUFDdEMsRUFBRSxNQUFNLGdCQUFNLE1BQU0sUUFBUSxNQUFNLDBEQUFrQjtBQUFBLEVBQ3BELEVBQUUsTUFBTSw0QkFBUSxNQUFNLFFBQVEsTUFBTSwyQkFBMkI7QUFDakUsQ0FBQzs7O0FDUHNSLFNBQVMsZUFBZTtBQUcvUyxJQUFPLGtCQUFRLFFBQVE7QUFBQSxFQUNyQjtBQUFBLElBQ0UsTUFBTTtBQUFBLElBQ04sTUFBTTtBQUFBLElBQ04sUUFBUTtBQUFBLElBQ1IsTUFBTTtBQUFBLElBQ04sYUFBYTtBQUFBLElBQ2IsVUFBVTtBQUFBLEVBQ1o7QUFBQSxFQUNBO0FBQUEsSUFDRSxNQUFNO0FBQUEsSUFDTixNQUFNO0FBQUEsSUFDTixRQUFRO0FBQUEsSUFDUixNQUFNO0FBQUEsSUFDTixhQUFhO0FBQUEsSUFDYixVQUFVO0FBQUEsRUFDWjtBQUFBLEVBQ0E7QUFBQSxJQUNFLE1BQU07QUFBQSxJQUNOLE1BQU07QUFBQSxJQUNOLFFBQVE7QUFBQSxJQUNSLE1BQU07QUFBQSxJQUNOLGFBQWE7QUFBQSxJQUNiLFVBQVU7QUFBQSxFQUNaO0FBQUEsRUFDQTtBQUFBLElBQ0UsTUFBTTtBQUFBLElBQ04sTUFBTTtBQUFBLElBQ04sUUFBUTtBQUFBLElBQ1IsTUFBTTtBQUFBLElBQ04sYUFBYTtBQUFBLElBQ2IsVUFBVTtBQUFBLEVBQ1o7QUFDRixDQUFDOzs7QUZwQ0QsSUFBTSxtQ0FBbUM7QUFLekMsSUFBTyxnQkFBUSxVQUFVO0FBQUEsRUFFdkIsVUFBVTtBQUFBLEVBRVYsUUFBUTtBQUFBLElBQ04sTUFBTTtBQUFBLElBQ04sS0FBSztBQUFBLEVBQ1A7QUFBQSxFQUVBLFlBQVk7QUFBQSxFQUNaLE1BQU07QUFBQSxFQUdOLFlBQVk7QUFBQSxFQUdaLGNBQWM7QUFBQSxFQUNkLGFBQWE7QUFBQSxFQUNiLFVBQVU7QUFBQSxFQUlWLFlBQVk7QUFBQSxJQUNWLE1BQU07QUFBQSxJQUNOLEtBQUs7QUFBQSxJQUNMLE9BQU87QUFBQSxJQUNQLFFBQVE7QUFBQSxFQUNWO0FBQUEsRUFDQSxZQUFZO0FBQUEsRUFHWixNQUFNO0FBQUEsRUFFTixXQUFXO0FBQUEsRUFFWCxhQUFhO0FBQUEsRUFFYixTQUFTO0FBQUEsRUFHVCxRQUFRO0FBQUEsRUFFUixjQUFjO0FBQUEsSUFDWixNQUFNLENBQUMsT0FBTztBQUFBLElBQ2QsUUFBUSxDQUFDLFNBQVMsUUFBUTtBQUFBLElBQzFCLE9BQU8sQ0FBQyxRQUFRLFNBQVM7QUFBQSxFQUMzQjtBQUFBLEVBS0EsU0FBUztBQUFBLEVBUVQsVUFBVSxDQUFDLFlBQVksT0FBTyxRQUFRLGVBQWUsVUFBVTtBQUFBLEVBRy9ELE1BQU07QUFBQSxJQUNKLGFBQWEsQ0FBQyxRQUFRLFlBQVksWUFBWSxPQUFPLGFBQWE7QUFBQSxJQUNsRSxNQUFNO0FBQUEsSUFDTixRQUFRO0FBQUEsSUFDUixhQUFhO0FBQUEsSUFDYixPQUFPO0FBQUEsSUFDUCxhQUFhO0FBQUEsSUFDYixRQUFRO0FBQUEsTUFDTixRQUFRO0FBQUEsTUFDUixPQUFPO0FBQUEsTUFDUCxvQkFBSztBQUFBLFFBQ0g7QUFBQSxRQUNBLEtBQUssUUFBUSxrQ0FBVyxpQkFBaUI7QUFBQSxNQUMzQztBQUFBLE1BQ0EsUUFBUTtBQUFBLE1BQ1IsT0FBTztBQUFBLE1BQ1AsU0FBUztBQUFBLE1BQ1QsS0FBSztBQUFBLElBQ1A7QUFBQSxFQUNGO0FBQUEsRUFFQSxXQUFXO0FBQUEsRUFDWCxTQUFTO0FBQUEsSUFPUCxTQUFTO0FBQUEsTUFDUCxVQUFVO0FBQUEsTUFDVixXQUFXO0FBQUEsTUFDWCxVQUFVO0FBQUEsUUFDUjtBQUFBLFFBQ0E7QUFBQSxRQUNBO0FBQUEsUUFDQTtBQUFBLFFBQ0E7QUFBQSxNQUNGO0FBQUEsTUFHQSxlQUFlO0FBQUEsUUFDYixLQUFLO0FBQUEsVUFFSCxlQUFlO0FBQUEsVUFFZixPQUFPO0FBQUEsVUFDUCxRQUFRO0FBQUEsVUFDUixRQUFRO0FBQUEsVUFDUixRQUFRO0FBQUEsVUFDUixRQUFRO0FBQUEsVUFDUixRQUFRO0FBQUEsVUFDUixRQUFRO0FBQUEsUUFDVjtBQUFBLE1BQ0Y7QUFBQSxJQVVGO0FBQUEsSUFHQSxZQUFZLENBQUMsU0FBUyxZQUFZLGVBQWUsU0FBUztBQUFBLElBRzFELFdBQVc7QUFBQSxNQUNULE9BQU87QUFBQSxNQUNQLE9BQU87QUFBQSxNQUdQLFdBQVc7QUFBQSxNQUlYLEtBQUs7QUFBQSxNQUNMLGVBQWU7QUFBQSxNQUVmLFdBQVc7QUFBQSxNQUNYLFlBQVk7QUFBQSxNQUNaLFNBQVM7QUFBQSxNQUVULE1BQU07QUFBQSxNQUVOLFVBQVU7QUFBQSxNQUNWLFVBQVU7QUFBQSxNQUNWLEtBQUs7QUFBQSxNQUNMLEtBQUs7QUFBQSxNQUNMLE1BQU07QUFBQSxJQUdSO0FBQUEsSUFHQSxNQUFNO0FBQUEsTUFDSixLQUFLO0FBQUEsTUFDTCxPQUFPO0FBQUEsSUFDVDtBQUFBLEVBQ0Y7QUFDRixDQUFDOzs7QUQxS0QsSUFBTUMsb0NBQW1DO0FBV3pDLElBQU8saUJBQVEsaUJBQWlCO0FBQUEsRUFFOUIsTUFBTTtBQUFBLEVBRU4sT0FBTztBQUFBLEVBRVAsYUFDRTtBQUFBLEVBR0YsTUFBTTtBQUFBLEVBRU47QUFBQSxFQUVBLGdCQUFnQjtBQUFBLEVBSWhCLGVBQWVDLE1BQUssUUFBUUMsbUNBQVcsb0JBQW9CO0FBQUEsRUFHM0QsY0FBYyxDQUFDLFdBQVcsVUFBVSxjQUFjLGVBQWU7QUFBQSxFQUVqRSxTQUFTO0FBQUEsSUFFUCxPQUFPO0FBQUEsTUFDTCxZQUFXO0FBQUEsSUFDYixDQUFDO0FBQUEsSUFRRCxnQkFBZ0I7QUFBQSxNQUVkLFFBQVE7QUFBQSxNQUNSLGFBQWE7QUFBQSxNQUNiLGtCQUFrQjtBQUFBLElBQ3BCLENBQUM7QUFBQSxJQUVELGdCQUFnQjtBQUFBLE1BRWQsY0FBYztBQUFBLE1BRWQsU0FBUztBQUFBLFFBQ1AsS0FBSztBQUFBLFVBRUgsYUFBYTtBQUFBLFFBQ2Y7QUFBQSxNQUNGO0FBQUEsTUFDQSxPQUFPO0FBQUEsSUFDVCxDQUFDO0FBQUEsSUFDRCxzQkFBc0I7QUFBQSxNQUNwQixJQUFJO0FBQUEsSUFDTixDQUFDO0FBQUEsRUFFSDtBQUNGLENBQUM7IiwKICAibmFtZXMiOiBbInBhdGgiLCAiX192aXRlX2luamVjdGVkX29yaWdpbmFsX2Rpcm5hbWUiLCAicGF0aCIsICJfX3ZpdGVfaW5qZWN0ZWRfb3JpZ2luYWxfZGlybmFtZSJdCn0K
